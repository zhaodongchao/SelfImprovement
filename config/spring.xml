<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.newtouch"/>
	
	<!-- 隐式地向 Spring 容器注册  -->
	<context:annotation-config/>
		<!-- 注解驱动,开启注解模式 -->
	<mvc:annotation-driven />
	
	<!-- 读取资源文件,有一下两种方式 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties" />
	</bean>
	<!-- <context:property-placeholder location="classpath:config.properties" />
 -->
   <!-- 配置数据源 -->
    <bean id="SpringDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${base_driver}"></property>
    <property name="url" value="${base_url}"></property>
    <property name="username" value="${base_username}"></property>
    <property name="password" value="${base_password}"></property>
    </bean>
    
    
    <!-- 配置spring跟mybatis的整合需要的SqlSessionFactoryBean: 1:配置数据源 2:加载mybatis文件 3:加载pojo的mybatis配置文件-->
 
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis.xml"></property>
    <property name="dataSource" ref="SpringDataSource"></property>
     <property name="mapperLocations">
     	<list>
			<!-- 自动匹配Mapper映射文件  -->
				<value>classpath:com/newtouch/mapper/*.xml</value>
			</list>
     </property>
    </bean>
    
     <!-- 配置spring的事物管理 -->
    	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="SpringDataSource" />
	    </bean>
	<aop:config>
<aop:pointcut id="pointcut" expression="execution(public * com.newtouch.services.impl.*Impl.*(..))" />
<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED"/>
			<tx:method name="judge*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

<aop:aspectj-autoproxy proxy-target-class="true"/>  
 </beans>
